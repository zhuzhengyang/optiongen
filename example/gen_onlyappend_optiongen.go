// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package example

// OnlyAppend should use NewOnlyAppend to initialize it
type OnlyAppend struct {
	Address []string
}

// NewOnlyAppend new OnlyAppend
func NewOnlyAppend(opts ...OnlyAppendOption) *OnlyAppend {
	cc := newDefaultOnlyAppend()
	for _, opt := range opts {
		opt(cc)
	}
	if watchDogOnlyAppend != nil {
		watchDogOnlyAppend(cc)
	}
	return cc
}

// ApplyOption apply multiple new option and return the old ones
// sample:
// old := cc.ApplyOption(WithTimeout(time.Second))
// defer cc.ApplyOption(old...)
func (cc *OnlyAppend) ApplyOption(opts ...OnlyAppendOption) []OnlyAppendOption {
	var previous []OnlyAppendOption
	for _, opt := range opts {
		previous = append(previous, opt(cc))
	}
	return previous
}

// OnlyAppendOption option func
type OnlyAppendOption func(cc *OnlyAppend) OnlyAppendOption

// AppendAddress append func for filed Address
func AppendAddress(v ...string) OnlyAppendOption {
	return func(cc *OnlyAppend) OnlyAppendOption {
		previous := cc.Address
		cc.Address = append(cc.Address, v...)
		return AppendAddress(previous...)
	}
}

// InstallOnlyAppendWatchDog the installed func will called when NewOnlyAppend  called
func InstallOnlyAppendWatchDog(dog func(cc *OnlyAppend)) { watchDogOnlyAppend = dog }

// watchDogOnlyAppend global watch dog
var watchDogOnlyAppend func(cc *OnlyAppend)

// setOnlyAppendDefaultValue default OnlyAppend value
func setOnlyAppendDefaultValue(cc *OnlyAppend) {
	for _, opt := range [...]OnlyAppendOption{
		AppendAddress([]string{"10.0.0.1:6379", "10.0.0.2:6379"}...),
	} {
		opt(cc)
	}
}

// newDefaultOnlyAppend new default OnlyAppend
func newDefaultOnlyAppend() *OnlyAppend {
	cc := &OnlyAppend{}
	setOnlyAppendDefaultValue(cc)
	return cc
}

// all getter func
func (cc *OnlyAppend) GetAddress() []string { return cc.Address }

// OnlyAppendVisitor visitor interface for OnlyAppend
type OnlyAppendVisitor interface {
	GetAddress() []string
}

// OnlyAppendInterface visitor + ApplyOption interface for OnlyAppend
type OnlyAppendInterface interface {
	OnlyAppendVisitor
	ApplyOption(...OnlyAppendOption) []OnlyAppendOption
}
